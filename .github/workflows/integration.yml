name: Integration

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  python-3-10-4:
    runs-on: ubuntu-latest

    env:
      DB_NAME: dummy
      DB_ENGINE: ${{ vars.DB_ENGINE }}
      DB_SECRET_KEY:
      DB_PORT: 5432
      DB_USER: postgres
      DB_HOST: localhost

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.4]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect Static Files
      run: |
        python manage.py collectstatic --noinput

    - name: Install gdown
      run: pip install gdown

    - name: Download SQL File from Google Drive
      run: gdown ${{ secrets.DB_SCHEMA }} -O dummy.sql

    - name: Install PostgreSQL Client
      run: sudo apt-get install -y postgresql-client

    - name: Run psql
      run: sudo service postgresql restart

    - name: Create database
      run:
          sudo -i -u postgres psql -c "CREATE DATABASE dummy;"

    - name: Transfer db file
      run: sudo mv dummy.sql /tmp/dummy.sql && sudo chmod 644 /tmp/dummy.sql

    - name: Restore Schema from Dump
      run: |
        sudo -u postgres psql -d dummy -f /tmp/dummy.sql

    - name: Integrate legacy DB
      run: python manage.py inspectdb | tee models.py

    - name: Check for Syntax Errors
      run: |
        find . -name "*.py" -exec python -m py_compile {} \;

    - name: Run Tests
      run: |
        python manage.py test

  python-3-11:
    runs-on: ubuntu-latest
    needs: python-3-10-4

    env:
      DB_NAME: ${{ vars.DB_NAME }}
      DB_ENGINE: ${{ vars.DB_ENGINE }}
      DB_SECRET_KEY: ${{ vars.DB_SECRET_KEY }}
      DB_PORT: ${{ vars.DB_PORT }}
      DB_USER: ${{ vars.DB_USER }}
      DB_HOST: ${{ vars.DB_HOST }}

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect Static Files
        run: |
          python manage.py collectstatic --noinput

      - name: Integrate legacy DB
        run: python manage.py inspectdb | tee models.py

      - name: Check for Syntax Errors
        run: |
          find . -name "*.py" -exec python -m py_compile {} \;

      - name: Run Tests
        run: |
          python manage.py test

  python-3-12:
    runs-on: ubuntu-latest

    needs: python-3-11

    env:
      DB_NAME: ${{ vars.DB_NAME }}
      DB_ENGINE: ${{ vars.DB_ENGINE }}
      DB_SECRET_KEY: ${{ vars.DB_SECRET_KEY }}
      DB_PORT: ${{ vars.DB_PORT }}
      DB_USER: ${{ vars.DB_USER }}
      DB_HOST: ${{ vars.DB_HOST }}

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect Static Files
        run: |
          python manage.py collectstatic --noinput

      - name: Integrate legacy DB
        run: python manage.py inspectdb | tee models.py

      - name: Check for Syntax Errors
        run: |
          find . -name "*.py" -exec python -m py_compile {} \;

      - name: Run Tests
        run: |
          python manage.py test
