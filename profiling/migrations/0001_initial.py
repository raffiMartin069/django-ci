# Generated by Django 5.1.4 on 2024-12-29 06:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccountStatus",
            fields=[
                ("acc_status_id", models.AutoField(primary_key=True, serialize=False)),
                ("acc_status_name", models.CharField(max_length=50, unique=True)),
            ],
            options={"db_table": "account_status", "managed": False,},
        ),
        migrations.CreateModel(
            name="Addresss",
            fields=[
                ("address_id", models.AutoField(primary_key=True, serialize=False)),
                ("house_num", models.CharField(blank=True, max_length=20, null=True)),
                ("street", models.CharField(blank=True, max_length=150, null=True)),
                ("purok_sitio", models.CharField(max_length=50)),
                ("barangay", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={"db_table": "addresss", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={"db_table": "auth_group", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_group_permissions", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={"db_table": "auth_permission", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={"db_table": "auth_user", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_user_groups", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_user_user_permissions", "managed": False,},
        ),
        migrations.CreateModel(
            name="BlotterCase",
            fields=[
                (
                    "blotter_case_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("blotter_case_num", models.CharField(max_length=15)),
                ("date_filed", models.DateField()),
                ("datetime_settled", models.DateTimeField(blank=True, null=True)),
                ("date_added", models.DateField(blank=True, null=True)),
            ],
            options={"db_table": "blotter_case", "managed": False,},
        ),
        migrations.CreateModel(
            name="BlotterLog",
            fields=[
                ("blotter_log_id", models.AutoField(primary_key=True, serialize=False)),
                ("blotter_case_num", models.CharField(max_length=15)),
                ("blotter_case_name", models.CharField(max_length=150)),
                ("form_type", models.CharField(max_length=50)),
            ],
            options={"db_table": "blotter_log", "managed": False,},
        ),
        migrations.CreateModel(
            name="BlotterStatus",
            fields=[
                (
                    "blotter_status_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("blotter_status_name", models.CharField(max_length=50)),
            ],
            options={"db_table": "blotter_status", "managed": False,},
        ),
        migrations.CreateModel(
            name="Casee",
            fields=[
                ("case_id", models.AutoField(primary_key=True, serialize=False)),
                ("case_name", models.CharField(max_length=255)),
            ],
            options={"db_table": "casee", "managed": False,},
        ),
        migrations.CreateModel(
            name="CaseType",
            fields=[
                ("case_type_id", models.AutoField(primary_key=True, serialize=False)),
                ("case_type_name", models.CharField(max_length=50)),
            ],
            options={"db_table": "case_type", "managed": False,},
        ),
        migrations.CreateModel(
            name="CivilStatus",
            fields=[
                (
                    "civil_status_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("civil_status_name", models.CharField(max_length=20, unique=True)),
            ],
            options={"db_table": "civil_status", "managed": False,},
        ),
        migrations.CreateModel(
            name="CommonLog",
            fields=[
                ("common_log_id", models.AutoField(primary_key=True, serialize=False)),
                ("record_affected_id", models.IntegerField()),
                ("details", models.TextField()),
                ("date_time", models.DateTimeField()),
                ("table_affected", models.CharField(max_length=100)),
                ("actionn", models.CharField(max_length=50)),
            ],
            options={"db_table": "common_log", "managed": False,},
        ),
        migrations.CreateModel(
            name="Credential",
            fields=[
                ("credentials_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=100)),
                ("passwordd", models.CharField(max_length=255)),
            ],
            options={"db_table": "credential", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={"db_table": "django_admin_log", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={"db_table": "django_content_type", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={"db_table": "django_migrations", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={"db_table": "django_session", "managed": False,},
        ),
        migrations.CreateModel(
            name="EducationalAttainment",
            fields=[
                ("education_id", models.AutoField(primary_key=True, serialize=False)),
                ("educ_level", models.CharField(max_length=150, unique=True)),
            ],
            options={"db_table": "educational_attainment", "managed": False,},
        ),
        migrations.CreateModel(
            name="FormDocumentation",
            fields=[
                (
                    "form_documentation_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("form_image_data", models.BinaryField(blank=True, null=True)),
                ("upload_date", models.DateField()),
            ],
            options={"db_table": "form_documentation", "managed": False,},
        ),
        migrations.CreateModel(
            name="FormType",
            fields=[
                ("form_type_id", models.AutoField(primary_key=True, serialize=False)),
                ("form_type_name", models.CharField(max_length=50)),
            ],
            options={"db_table": "form_type", "managed": False,},
        ),
        migrations.CreateModel(
            name="LoginLog",
            fields=[
                ("login_log_id", models.AutoField(primary_key=True, serialize=False)),
                ("login_time", models.DateTimeField()),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "login_log", "managed": False,},
        ),
        migrations.CreateModel(
            name="LogSubsystem",
            fields=[
                (
                    "log_subsystem_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("log_subsystem_name", models.CharField(max_length=100)),
            ],
            options={"db_table": "log_subsystem", "managed": False,},
        ),
        migrations.CreateModel(
            name="NonResident",
            fields=[
                (
                    "non_resident_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("last_name", models.CharField(max_length=50)),
                ("first_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=50, null=True)),
                ("contact_num", models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={"db_table": "non_resident", "managed": False,},
        ),
        migrations.CreateModel(
            name="Quarter",
            fields=[
                ("quarter_id", models.AutoField(primary_key=True, serialize=False)),
                ("quarterr", models.CharField(max_length=50, unique=True)),
            ],
            options={"db_table": "quarter", "managed": False,},
        ),
        migrations.CreateModel(
            name="Religion",
            fields=[
                ("religion_id", models.AutoField(primary_key=True, serialize=False)),
                ("religion_name", models.CharField(max_length=100, unique=True)),
            ],
            options={"db_table": "religion", "managed": False,},
        ),
        migrations.CreateModel(
            name="Resident",
            fields=[
                ("resident_id", models.AutoField(primary_key=True, serialize=False)),
                ("last_name", models.CharField()),
                ("first_name", models.CharField()),
                ("middle_name", models.CharField(blank=True, null=True)),
                ("sex", models.CharField(blank=True, max_length=1, null=True)),
                ("birthdate", models.DateField(blank=True, null=True)),
                ("is_voter", models.BooleanField(blank=True, null=True)),
            ],
            options={"db_table": "resident", "managed": False,},
        ),
        migrations.CreateModel(
            name="ResidentCategory",
            fields=[
                (
                    "resident_category_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "resident_category_legend",
                    models.CharField(max_length=50, unique=True),
                ),
                ("resident_category_description", models.CharField(max_length=50)),
            ],
            options={"db_table": "resident_category", "managed": False,},
        ),
        migrations.CreateModel(
            name="ResidentHistory",
            fields=[
                (
                    "resident_history_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("last_name", models.CharField(max_length=50)),
                ("first_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=50, null=True)),
                ("sex", models.CharField(blank=True, max_length=1, null=True)),
                ("birthdate", models.DateField(blank=True, null=True)),
                ("date_transferred", models.DateField()),
                ("is_voter", models.BooleanField(blank=True, null=True)),
            ],
            options={"db_table": "resident_history", "managed": False,},
        ),
        migrations.CreateModel(
            name="ResidentStatus",
            fields=[
                (
                    "resident_status_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("resident_status_name", models.CharField(max_length=50, unique=True)),
            ],
            options={"db_table": "resident_status", "managed": False,},
        ),
        migrations.CreateModel(
            name="Rolee",
            fields=[
                ("role_id", models.AutoField(primary_key=True, serialize=False)),
                ("role_name", models.CharField(max_length=50, unique=True)),
            ],
            options={"db_table": "rolee", "managed": False,},
        ),
        migrations.CreateModel(
            name="Userr",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("last_name", models.CharField(max_length=50)),
                ("first_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={"db_table": "userr", "managed": False,},
        ),
        migrations.CreateModel(
            name="VoterRecord",
            fields=[
                (
                    "voter_record_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("precinct_num", models.CharField(max_length=10, unique=True)),
                ("date_added", models.DateField(blank=True, null=True)),
            ],
            options={"db_table": "voter_record", "managed": False,},
        ),
    ]
